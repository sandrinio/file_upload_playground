{"version":3,"sources":["../../../../../public/ckeditor/plugins/autogrow/plugin.js"],"names":["CKEDITOR","plugins","add","init","editor","elementMode","ELEMENT_MODE_INLINE","on","editable","isInline","ui","space","setStyle","initIframeAutogrow","lastHeight","doc","markerContainer","scrollable","marker","configBottomSpace","config","autoGrow_bottomSpace","configMinHeight","autoGrow_minHeight","undefined","configMaxHeight","autoGrow_maxHeight","Infinity","maxHeightIsUnlimited","addCommand","exec","resizeEditor","modes","wysiwyg","readOnly","canUndo","editorFocus","eventsList","contentDom","key","selectionChange","insertElement","mode","eventName","evt","setTimeout","isNotResizable","data","name","command","state","TRISTATE_ON","removeStyle","refreshCache","autoGrow_onStartup","isVisible","execCommand","document","env","ie","quirks","getBody","getDocumentElement","body","findOne","safari","dom","element","createFromHtml","webkit","maximizeCommand","getCommand","window","contentHeight","append","height","getDocumentPosition","y","$","offsetHeight","remove","currentHeight","getViewPaneSize","newHeight","Math","max","min","fire","resize","container","getStyle","scrollHeight","clientHeight"],"mappings":"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","file":"plugin.js","sourcesContent":["/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or http://ckeditor.com/license\n */\n\n/**\n * @fileOverview The Auto Grow plugin.\n */\n\n'use strict';\n\n( function() {\n\tCKEDITOR.plugins.add( 'autogrow', {\n\t\tinit: function( editor ) {\n\t\t\t// This feature is available only for themed ui instance.\n\t\t\tif ( editor.elementMode == CKEDITOR.ELEMENT_MODE_INLINE )\n\t\t\t\treturn;\n\n\t\t\teditor.on( 'instanceReady', function() {\n\t\t\t\t// Simply set auto height with div wysiwyg.\n\t\t\t\tif ( editor.editable().isInline() )\n\t\t\t\t\teditor.ui.space( 'contents' ).setStyle( 'height', 'auto' );\n\t\t\t\t// For classic (`iframe`-based) wysiwyg we need to resize the editor.\n\t\t\t\telse\n\t\t\t\t\tinitIframeAutogrow( editor );\n\t\t\t} );\n\t\t}\n\t} );\n\n\tfunction initIframeAutogrow( editor ) {\n\t\tvar lastHeight,\n\t\t\tdoc,\n\t\t\tmarkerContainer,\n\t\t\tscrollable,\n\t\t\tmarker,\n\t\t\tconfigBottomSpace = editor.config.autoGrow_bottomSpace || 0,\n\t\t\tconfigMinHeight = editor.config.autoGrow_minHeight !== undefined ? editor.config.autoGrow_minHeight : 200,\n\t\t\tconfigMaxHeight = editor.config.autoGrow_maxHeight || Infinity,\n\t\t\tmaxHeightIsUnlimited = !editor.config.autoGrow_maxHeight;\n\n\t\teditor.addCommand( 'autogrow', {\n\t\t\texec: resizeEditor,\n\t\t\tmodes: { wysiwyg: 1 },\n\t\t\treadOnly: 1,\n\t\t\tcanUndo: false,\n\t\t\teditorFocus: false\n\t\t} );\n\n\t\tvar eventsList = { contentDom: 1, key: 1, selectionChange: 1, insertElement: 1, mode: 1 };\n\t\tfor ( var eventName in eventsList ) {\n\t\t\teditor.on( eventName, function( evt ) {\n\t\t\t\t// Some time is required for insertHtml, and it gives other events better performance as well.\n\t\t\t\tif ( evt.editor.mode == 'wysiwyg' ) {\n\t\t\t\t\tsetTimeout( function() {\n\t\t\t\t\t\tif ( isNotResizable() ) {\n\t\t\t\t\t\t\tlastHeight = null;\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresizeEditor();\n\n\t\t\t\t\t\t// Second pass to make correction upon the first resize, e.g. scrollbar.\n\t\t\t\t\t\t// If height is unlimited vertical scrollbar was removed in the first\n\t\t\t\t\t\t// resizeEditor() call, so we don't need the second pass.\n\t\t\t\t\t\tif ( !maxHeightIsUnlimited )\n\t\t\t\t\t\t\tresizeEditor();\n\t\t\t\t\t}, 100 );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Coordinate with the \"maximize\" plugin. (http://dev.ckeditor.com/ticket/9311)\n\t\teditor.on( 'afterCommandExec', function( evt ) {\n\t\t\tif ( evt.data.name == 'maximize' && evt.editor.mode == 'wysiwyg' ) {\n\t\t\t\tif ( evt.data.command.state == CKEDITOR.TRISTATE_ON )\n\t\t\t\t\tscrollable.removeStyle( 'overflow-y' );\n\t\t\t\telse\n\t\t\t\t\tresizeEditor();\n\t\t\t}\n\t\t} );\n\n\t\teditor.on( 'contentDom', refreshCache );\n\n\t\trefreshCache();\n\n\t\tif ( editor.config.autoGrow_onStartup && editor.editable().isVisible() ) {\n\t\t\teditor.execCommand( 'autogrow' );\n\t\t}\n\n\t\tfunction refreshCache() {\n\t\t\tdoc = editor.document;\n\t\t\tmarkerContainer = doc[ CKEDITOR.env.ie ? 'getBody' : 'getDocumentElement' ]();\n\n\t\t\t// Quirks mode overflows body, standards overflows document element.\n\t\t\tscrollable = CKEDITOR.env.quirks ? doc.getBody() : doc.getDocumentElement();\n\n\t\t\t// Reset scrollable body height and min-height css values.\n\t\t\t// While set by outside code it may break resizing. (http://dev.ckeditor.com/ticket/14620)\n\t\t\tvar body = CKEDITOR.env.quirks ? scrollable : scrollable.findOne( 'body' );\n\t\t\tif ( body ) {\n\t\t\t\tbody.setStyle( 'height', 'auto' );\n\t\t\t\tbody.setStyle( 'min-height', CKEDITOR.env.safari ? '0%' : 'auto' ); // Safari does not support 'min-height: auto'.\n\t\t\t}\n\n\t\t\tmarker = CKEDITOR.dom.element.createFromHtml(\n\t\t\t\t'<span style=\"margin:0;padding:0;border:0;clear:both;width:1px;height:1px;display:block;\">' +\n\t\t\t\t\t( CKEDITOR.env.webkit ? '&nbsp;' : '' ) +\n\t\t\t\t'</span>',\n\t\t\t\tdoc );\n\t\t}\n\n\t\tfunction isNotResizable() {\n\t\t\tvar maximizeCommand = editor.getCommand( 'maximize' );\n\n\t\t\treturn (\n\t\t\t\t!editor.window ||\n\t\t\t\t// Disable autogrow when the editor is maximized. (http://dev.ckeditor.com/ticket/6339)\n\t\t\t\tmaximizeCommand && maximizeCommand.state == CKEDITOR.TRISTATE_ON\n\t\t\t);\n\t\t}\n\n\t\t// Actual content height, figured out by appending check the last element's document position.\n\t\tfunction contentHeight() {\n\t\t\t// Append a temporary marker element.\n\t\t\tmarkerContainer.append( marker );\n\t\t\tvar height = marker.getDocumentPosition( doc ).y + marker.$.offsetHeight;\n\t\t\tmarker.remove();\n\n\t\t\treturn height;\n\t\t}\n\n\t\tfunction resizeEditor() {\n\t\t\t// Hide scroll because we won't need it at all.\n\t\t\t// Thanks to that we'll need only one resizeEditor() call per change.\n\t\t\tif ( maxHeightIsUnlimited )\n\t\t\t\tscrollable.setStyle( 'overflow-y', 'hidden' );\n\n\t\t\tvar currentHeight = editor.window.getViewPaneSize().height,\n\t\t\t\tnewHeight = contentHeight();\n\n\t\t\t// Additional space specified by user.\n\t\t\tnewHeight += configBottomSpace;\n\t\t\tnewHeight = Math.max( newHeight, configMinHeight );\n\t\t\tnewHeight = Math.min( newHeight, configMaxHeight );\n\n\t\t\t// http://dev.ckeditor.com/ticket/10196 Do not resize editor if new height is equal\n\t\t\t// to the one set by previous resizeEditor() call.\n\t\t\tif ( newHeight != currentHeight && lastHeight != newHeight ) {\n\t\t\t\tnewHeight = editor.fire( 'autoGrow', { currentHeight: currentHeight, newHeight: newHeight } ).newHeight;\n\t\t\t\teditor.resize( editor.container.getStyle( 'width' ), newHeight, true );\n\t\t\t\tlastHeight = newHeight;\n\t\t\t}\n\n\t\t\tif ( !maxHeightIsUnlimited ) {\n\t\t\t\tif ( newHeight < configMaxHeight && scrollable.$.scrollHeight > scrollable.$.clientHeight )\n\t\t\t\t\tscrollable.setStyle( 'overflow-y', 'hidden' );\n\t\t\t\telse\n\t\t\t\t\tscrollable.removeStyle( 'overflow-y' );\n\t\t\t}\n\t\t}\n\t}\n} )();\n\n/**\n * The minimum height that the editor can assume when adjusting to content by using the Auto Grow\n * feature. This option accepts a value in pixels, without the unit (for example: `300`).\n *\n * Read more in the [documentation](#!/guide/dev_autogrow)\n * and see the [SDK sample](http://sdk.ckeditor.com/samples/autogrow.html).\n *\n *\t\tconfig.autoGrow_minHeight = 300;\n *\n * @since 3.4\n * @cfg {Number} [autoGrow_minHeight=200]\n * @member CKEDITOR.config\n */\n\n/**\n * The maximum height that the editor can assume when adjusting to content by using the Auto Grow\n * feature. This option accepts a value in pixels, without the unit (for example: `600`).\n * Zero (`0`) means that the maximum height is not limited and the editor will expand infinitely.\n *\n * Read more in the [documentation](#!/guide/dev_autogrow)\n * and see the [SDK sample](http://sdk.ckeditor.com/samples/autogrow.html).\n *\n *\t\tconfig.autoGrow_maxHeight = 400;\n *\n * @since 3.4\n * @cfg {Number} [autoGrow_maxHeight=0]\n * @member CKEDITOR.config\n */\n\n/**\n * Whether automatic editor height adjustment brought by the Auto Grow feature should happen on\n * editor creation.\n *\n * Read more in the [documentation](#!/guide/dev_autogrow)\n * and see the [SDK sample](http://sdk.ckeditor.com/samples/autogrow.html).\n *\n *\t\tconfig.autoGrow_onStartup = true;\n *\n * @since 3.6.2\n * @cfg {Boolean} [autoGrow_onStartup=false]\n * @member CKEDITOR.config\n */\n\n/**\n * Extra vertical space to be added between the content and the editor bottom bar when adjusting\n * editor height to content by using the Auto Grow feature. This option accepts a value in pixels,\n * without the unit (for example: `50`).\n *\n * Read more in the [documentation](#!/guide/dev_autogrow)\n * and see the [SDK sample](http://sdk.ckeditor.com/samples/autogrow.html).\n *\n *\t\tconfig.autoGrow_bottomSpace = 50;\n *\n * @since 3.6.2\n * @cfg {Number} [autoGrow_bottomSpace=0]\n * @member CKEDITOR.config\n */\n\n/**\n * Fired when the Auto Grow plugin is about to change the size of the editor.\n *\n * @event autogrow\n * @member CKEDITOR.editor\n * @param {CKEDITOR.editor} editor This editor instance.\n * @param data\n * @param {Number} data.currentHeight The current editor height (before resizing).\n * @param {Number} data.newHeight The new editor height (after resizing). It can be changed\n * to achieve a different height value to be used instead.\n */\n"]}